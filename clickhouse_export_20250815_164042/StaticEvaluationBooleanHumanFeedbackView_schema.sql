CREATE MATERIALIZED VIEW tensorzero.StaticEvaluationBooleanHumanFeedbackView TO tensorzero.StaticEvaluationHumanFeedback\n(\n    `metric_name` LowCardinality(String),\n    `datapoint_id` UUID,\n    `output` String,\n    `value` String,\n    `feedback_id` UUID,\n    `evaluator_inference_id` UUID\n)\nAS WITH\n    boolean_human_feedback AS\n    (\n        SELECT\n            metric_name,\n            toUUID(tags[\'tensorzero::datapoint_id\']) AS datapoint_id,\n            toJSONString(value) AS value,\n            id AS feedback_id,\n            target_id,\n            toUUID(tags[\'tensorzero::evaluator_inference_id\']) AS evaluator_inference_id\n        FROM tensorzero.BooleanMetricFeedback\n        WHERE mapContains(tags, \'tensorzero::human_feedback\') AND mapContains(tags, \'tensorzero::datapoint_id\')\n    ),\n    inference_by_id AS\n    (\n        SELECT\n            id_uint,\n            function_name,\n            function_type,\n            variant_name,\n            episode_id\n        FROM tensorzero.InferenceById\n        WHERE id_uint IN (\n            SELECT toUInt128(target_id)\n            FROM boolean_human_feedback\n        )\n    ),\n    chat_inference AS\n    (\n        SELECT\n            function_name,\n            variant_name,\n            episode_id,\n            id,\n            output\n        FROM tensorzero.ChatInference\n        WHERE (function_name, variant_name, episode_id) IN (\n            SELECT\n                function_name,\n                variant_name,\n                episode_id\n            FROM inference_by_id\n        )\n    ),\n    json_inference AS\n    (\n        SELECT\n            function_name,\n            variant_name,\n            episode_id,\n            id,\n            output\n        FROM tensorzero.JsonInference\n        WHERE (function_name, variant_name, episode_id) IN (\n            SELECT\n                function_name,\n                variant_name,\n                episode_id\n            FROM inference_by_id\n        )\n    )\nSELECT\n    f.metric_name AS metric_name,\n    f.datapoint_id AS datapoint_id,\n    if(i.function_type = \'chat\', ci.output, ji.output) AS output,\n    f.value AS value,\n    f.feedback_id AS feedback_id,\n    f.evaluator_inference_id AS evaluator_inference_id\nFROM boolean_human_feedback AS f\nINNER JOIN inference_by_id AS i ON toUInt128(f.target_id) = i.id_uint\nLEFT JOIN chat_inference AS ci ON (i.function_type = \'chat\') AND (i.function_name = ci.function_name) AND (i.variant_name = ci.variant_name) AND (i.episode_id = ci.episode_id) AND (f.target_id = ci.id)\nLEFT JOIN json_inference AS ji ON (i.function_type = \'json\') AND (i.function_name = ji.function_name) AND (i.variant_name = ji.variant_name) AND (i.episode_id = ji.episode_id) AND (f.target_id = ji.id);
